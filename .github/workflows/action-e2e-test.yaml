name: E2E test

on:
  # No matter for push or pull request events, it would trigger CI for safely saving the source code.
  # For the push event, it only runs building and testing.
  push:
    branches:
      - "master"
    paths:
      # About customized action: delete remote git branch which for end-to-end test only
      - ".github/actions/clear_remote_branch/**.yaml"
      - "scripts/ci/clear_e2e_test_env.py"
      # About customized action: set up a fake HTTP server for end-to-end test only
      - ".github/actions/setup_fake_server/**.yaml"
      # End-to-End test
      - ".github/workflows/action-e2e-test.yaml"
      # Source code and config
      - "fake_api_server_plugin/ci/**/*.py"
      - "!**/__pkg_info__.py"
      - "action.yaml"
      - "pyproject.toml"
      - "poetry.lock"

  # For the push event, in addition to build and test would be run, it would trigger other service to keep the reports
  # or other checking, i.e., record the test report by CodeCov and check the code quality by SonarQube.
  pull_request:
    branches:
      - "master"
    paths:
      # About customized action: delete remote git branch which for end-to-end test only
      - ".github/actions/clear_remote_branch/**.yaml"
      - "scripts/ci/clear_e2e_test_env.py"
      # About customized action: set up a fake HTTP server for end-to-end test only
      - ".github/actions/setup_fake_server/**.yaml"
      # End-to-End test
      - ".github/workflows/action-e2e-test.yaml"
      # Source code and config
      - "fake_api_server_plugin/ci/**/*.py"
      - "!**/__pkg_info__.py"
      - "action.yaml"
      - "pyproject.toml"
      - "poetry.lock"

permissions:
  contents: write  # Need this to push commits
  pull-requests: write

jobs:
  with-required-param:
    runs-on: ubuntu-latest
    steps:
      - name: Clone project
        uses: actions/checkout@v5

      - name: Set up fake server
        uses: ./.github/actions/setup_fake_server/
        with:
          host-ip-address: "0.0.0.0"
          host-port: "1111"
          server-module: "test._values._only_for_ci.fake_api_doc_host"
          server-entry-point: "app"

      - name: Run Fake-API-Server-Surveillance
        uses: ./
        with:
          config-path: ./test/config/e2e_test/with_required_params.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI_TEST_MODE: true

      - name: Remove the git branch which for end-to-end test only
        uses: ./.github/actions/clear_remote_branch/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  with-optional-param:
    runs-on: ubuntu-latest
    steps:
      - name: Clone project
        uses: actions/checkout@v5

      - name: Set up fake server
        uses: ./.github/actions/setup_fake_server/
        with:
          host-ip-address: "0.0.0.0"
          host-port: "1111"
          server-module: "test._values._only_for_ci.fake_api_doc_host"
          server-entry-point: "app"

      - name: Run Fake-API-Server-Surveillance
        uses: ./
        with:
          config-path: ./test/config/e2e_test/with_optional_params.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI_TEST_MODE: true

      - name: Remove the git branch which for end-to-end test only
        uses: ./.github/actions/clear_remote_branch/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  with-invalid-os:
    runs-on: windows-latest
    steps:
      - name: Clone project
        uses: actions/checkout@v5

      - name: Run Fake-API-Server-Surveillance
        id: e2e-test-invalid-case
        uses: ./
        with:
          config-path: ./test/config/e2e_test/with_invalid_os.yaml
        continue-on-error: true

      - name: Check on failures
        run: |
          echo "[DEBUG] running state: ${{ steps.e2e-test-invalid-case.outcome }}"
          if ( "${{ steps.e2e-test-invalid-case.outcome }}" -eq "failure" )
          {
              echo "It runs fail as expect. Test PASS."
              exit 0
          }
          else
          {
              echo "It runs success as unexpect. Test FAIL."
              exit 1
          }
