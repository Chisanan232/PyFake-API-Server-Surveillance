name: E2E test

on:
  # No matter for push or pull request events, it would trigger CI for safely saving the source code.
  # For the push event, it only runs building and testing.
  push:
    branches:
      - "master"
      - "develop/**"
    paths:
      - ".github/workflows/action-e2e-test.yaml"
      - "ci/**"
      - "action.yaml"
      - "pyproject.toml"
      - "poetry.lock"

  # For the push event, in addition to build and test would be run, it would trigger other service to keep the reports
  # or other checking, i.e., record the test report by CodeCov and check the code quality by SonarQube.
  pull_request:
    branches:
      - "master"
      - "develop/**"
    paths:
      - ".github/workflows/action-e2e-test.yaml"
      - "ci/**"
      - "action.yaml"
      - "pyproject.toml"
      - "poetry.lock"

jobs:
  with-required-param:
    runs-on: ubuntu-latest
    steps:
      - name: Clone project
        uses: actions/checkout@v4

      - name: Set up fake server
        uses: ./.github/actions/setup_fake_server/
        with:
          host-ip-address: "0.0.0.0"
          host-port: "1111"
          server-module: "test._values._only_for_ci.fake_api_doc_host"
          server-entry-point: "app"

      - name: Verify the fake server health
        run: curl "http://127.0.0.1:1111/api-doc"

      - name: Run Fake-API-Server-Surveillance
        uses: ./
        with:
          repo: Chisanan232/Sample-Python-Server
          api-doc-url: "http://127.0.0.1:20080"
          dry-run: "true"

  with-optional-param:
    runs-on: ubuntu-latest
    steps:
      - name: Clone project
        uses: actions/checkout@v4

      - name: Set up fake server
        uses: ./.github/actions/setup_fake_server/
        with:
          host-ip-address: "0.0.0.0"
          host-port: "1111"
          server-module: "test._values._only_for_ci.fake_api_doc_host"
          server-entry-point: "app"

      - name: Verify the fake server health
        run: curl "http://127.0.0.1:1111/api-doc"

      - name: Run Fake-API-Server-Surveillance
        uses: ./
        with:
          # API server info
          repo: Chisanan232/Sample-Python-Server
          api-doc-url: "http://127.0.0.1:20080"
          # git info
          git-author-name: "e2e-test-bot"
          git-author-email: "e2e-test-bot@testmail.com"
          git-commit-msg: " ðŸ§ª test commit message."
          # options about how to pull API server doc config
          config-path: "./rest-server/api.yaml"
          include-template-config: "true"
          base-file-path: "./rest-server/"
          base-url: "/test/v1"
          divide-api: "true"
          dry-run: "true"

  with-invalid-os:
    runs-on: windows-latest
    steps:
      - name: Clone project
        uses: actions/checkout@v4

      - name: Run Fake-API-Server-Surveillance
        id: e2e-test-invalid-case
        uses: ./
        with:
          repo: Chisanan232/Sample-Python-Server
          api-doc-url: "http://127.0.0.1:20080"
          dry-run: "true"
        continue-on-error: true

      - name: Check on failures
        run: |
          echo "[DEBUG] RUN_ERROR: ${{ steps.e2e-test-invalid-case.outcome }}"
          if ( ${{ steps.e2e-test-invalid-case.outcome }} -eq "failure" )
          {
              echo "It runs fail as expect. Test PASS."
              exit 0
          }
          else
          {
              echo "It runs success as unexpect. Test FAIL."
              exit 1
          }
